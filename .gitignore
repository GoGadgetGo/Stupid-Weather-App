app/build.gradle
@@ -0,0 +1,25 @@
 +apply plugin: 'com.android.application'
 +
 +android {
 +    compileSdkVersion 21
 +    buildToolsVersion "21.1.2"
 +
 +    defaultConfig {
 +        applicationId "com.example.android.sunshine.app"
 +        minSdkVersion 10
 +        targetSdkVersion 21
 +        versionCode 1
 +        versionName "1.0"
 +    }
 +    buildTypes {
 +        release {
 +            minifyEnabled false
 +            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
 +        }
 +    }
 +}
 +
 +dependencies {
 +    compile fileTree(dir: 'libs', include: ['*.jar'])
 +    compile 'com.android.support:appcompat-v7:21.0.2'
 +}
View 17  app/proguard-rules.pro
@@ -0,0 +1,17 @@
 +# Add project specific ProGuard rules here.
 +# By default, the flags in this file are appended to flags specified
 +# in /Users/lyla/Library/Android/sdk/tools/proguard/proguard-android.txt
 +# You can edit the include path and order by changing the proguardFiles
 +# directive in build.gradle.
 +#
 +# For more details, see
 +#   http://developer.android.com/guide/developing/tools/proguard.html
 +
 +# Add any project specific keep options here:
 +
 +# If your project uses WebView with JS, uncomment the following
 +# and specify the fully qualified class name to the JavaScript interface
 +# class:
 +#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
 +#   public *;
 +#}
View 13  app/src/androidTest/java/com/example/android/sunshine/app/ApplicationTest.java
@@ -0,0 +1,13 @@
 +package com.example.android.sunshine.app;
 +
 +import android.app.Application;
 +import android.test.ApplicationTestCase;
 +
 +/**
 + * <a href="http://d.android.com/tools/testing/testing_android.html">Testing Fundamentals</a>
 + */
 +public class ApplicationTest extends ApplicationTestCase<Application> {
 +    public ApplicationTest() {
 +        super(Application.class);
 +    }
 +} 
View 21  app/src/main/AndroidManifest.xml
@@ -0,0 +1,21 @@
 +<?xml version="1.0" encoding="utf-8"?>
 +<manifest xmlns:android="http://schemas.android.com/apk/res/android"
 +    package="com.example.android.sunshine.app" >
 +
 +    <application
 +        android:allowBackup="true"
 +        android:icon="@drawable/ic_launcher"
 +        android:label="@string/app_name"
 +        android:theme="@style/AppTheme" >
 +        <activity
 +            android:name=".MainActivity"
 +            android:label="@string/app_name" >
 +            <intent-filter>
 +                <action android:name="android.intent.action.MAIN" />
 +
 +                <category android:name="android.intent.category.LAUNCHER" />
 +            </intent-filter>
 +        </activity>
 +    </application>
 +
 +</manifest>
View 63  app/src/main/java/com/example/android/sunshine/app/MainActivity.java
@@ -0,0 +1,63 @@
 +package com.example.android.sunshine.app;
 +
 +import android.support.v7.app.ActionBarActivity;
 +import android.support.v4.app.Fragment;
 +import android.os.Bundle;
 +import android.view.LayoutInflater;
 +import android.view.Menu;
 +import android.view.MenuItem;
 +import android.view.View;
 +import android.view.ViewGroup;
 +
 +
 +public class MainActivity extends ActionBarActivity {
 +
 +    @Override
 +    protected void onCreate(Bundle savedInstanceState) {
 +        super.onCreate(savedInstanceState);
 +        setContentView(R.layout.activity_main);
 +        if (savedInstanceState == null) {
 +            getSupportFragmentManager().beginTransaction()
 +                    .add(R.id.container, new PlaceholderFragment())
 +                    .commit();
 +        }
 +    }
 +
 +    @Override
 +    public boolean onCreateOptionsMenu(Menu menu) {
 +        // Inflate the menu; this adds items to the action bar if it is present.
 +        getMenuInflater().inflate(R.menu.main, menu);
 +        return true;
 +    }
 +
 +    @Override
 +    public boolean onOptionsItemSelected(MenuItem item) {
 +        // Handle action bar item clicks here. The action bar will
 +        // automatically handle clicks on the Home/Up button, so long
 +        // as you specify a parent activity in AndroidManifest.xml.
 +        int id = item.getItemId();
 +
 +        //noinspection SimplifiableIfStatement
 +        if (id == R.id.action_settings) {
 +            return true;
 +        }
 +
 +        return super.onOptionsItemSelected(item);
 +    }
 +
 +    /**
 +     * A placeholder fragment containing a simple view.
 +     */
 +    public static class PlaceholderFragment extends Fragment {
 +
 +        public PlaceholderFragment() {
 +        }
 +
 +        @Override
 +        public View onCreateView(LayoutInflater inflater, ViewGroup container,
 +                                 Bundle savedInstanceState) {
 +            View rootView = inflater.inflate(R.layout.fragment_main, container, false);
 +            return rootView;
 +        }
 +    }
 +}
View BIN  app/src/main/res/drawable-hdpi/ic_launcher.png

View BIN  app/src/main/res/drawable-mdpi/ic_launcher.png

View BIN  app/src/main/res/drawable-xhdpi/ic_launcher.png

View BIN  app/src/main/res/drawable-xxhdpi/ic_launcher.png

View 4  app/src/main/res/layout/activity_main.xml
@@ -0,0 +1,4 @@
 +<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
 +    xmlns:tools="http://schemas.android.com/tools" android:id="@+id/container"
 +    android:layout_width="match_parent" android:layout_height="match_parent"
 +    tools:context=".MainActivity" tools:ignore="MergeRootFrame" />
View 12  app/src/main/res/layout/fragment_main.xml
@@ -0,0 +1,12 @@
 +<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 +    xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
 +    android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"
 +    android:paddingRight="@dimen/activity_horizontal_margin"
 +    android:paddingTop="@dimen/activity_vertical_margin"
 +    android:paddingBottom="@dimen/activity_vertical_margin"
 +    tools:context=".MainActivity$PlaceholderFragment">
 +
 +    <TextView android:text="@string/hello_world" android:layout_width="wrap_content"
 +        android:layout_height="wrap_content" />
 +
 +</RelativeLayout>
View 6  app/src/main/res/menu/main.xml
@@ -0,0 +1,6 @@
 +<menu xmlns:android="http://schemas.android.com/apk/res/android"
 +    xmlns:app="http://schemas.android.com/apk/res-auto"
 +    xmlns:tools="http://schemas.android.com/tools" tools:context=".MainActivity">
 +    <item android:id="@+id/action_settings" android:title="@string/action_settings"
 +        android:orderInCategory="100" app:showAsAction="never" />
 +</menu>
View 6  app/src/main/res/values-w820dp/dimens.xml
@@ -0,0 +1,6 @@
 +<resources>
 +    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
 +         (such as screen margins) for screens with more than 820dp of available width. This
 +         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
 +    <dimen name="activity_horizontal_margin">64dp</dimen>
 +</resources>
View 5  app/src/main/res/values/dimens.xml
@@ -0,0 +1,5 @@
 +<resources>
 +    <!-- Default screen margins, per the Android Design guidelines. -->
 +    <dimen name="activity_horizontal_margin">16dp</dimen>
 +    <dimen name="activity_vertical_margin">16dp</dimen>
 +</resources>
View 8  app/src/main/res/values/strings.xml
@@ -0,0 +1,8 @@
 +<?xml version="1.0" encoding="utf-8"?>
 +<resources>
 +
 +    <string name="app_name">Sunshine</string>
 +    <string name="hello_world">Hello world!</string>
 +    <string name="action_settings">Settings</string>
 +
 +</resources>
View 8  app/src/main/res/values/styles.xml
@@ -0,0 +1,8 @@
 +<resources>
 +
 +    <!-- Base application theme. -->
 +    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
 +        <!-- Customize your theme here. -->
 +    </style>
 +
 +</resources>
View 19  build.gradle
@@ -0,0 +1,19 @@
 +// Top-level build file where you can add configuration options common to all sub-projects/modules.
 +
 +buildscript {
 +    repositories {
 +        jcenter()
 +    }
 +    dependencies {
 +        classpath 'com.android.tools.build:gradle:1.0.0'
 +
 +        // NOTE: Do not place your application dependencies here; they belong
 +        // in the individual module build.gradle files
 +    }
 +}
 +
 +allprojects {
 +    repositories {
 +        jcenter()
 +    }
 +}
View 18  gradle.properties
@@ -0,0 +1,18 @@
 +# Project-wide Gradle settings.
  +# Gradle settings configured through the IDE *will override*
 +# any settings specified in this file.
 +
 +# For more details on how to configure your build environment visit
 +# http://www.gradle.org/docs/current/userguide/build_environment.html
 +# Specifies the JVM arguments used for the daemon process.
 +# The setting is particularly useful for tweaking memory settings.
 +# Default value: -Xmx10248m -XX:MaxPermSize=256m
 +# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:
 +HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
 +# When configured, Gradle will run in incubating parallel mode.
 +# This option should only be used with decoupled projects. More details, visit
 +# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
 +# org.gradle.parallel=true 
View BIN  gradle/wrapper/gradle-wrapper.jar
Binary file not shown
View 6  gradle/wrapper/gradle-wrapper.properties
@@ -0,0 +1,6 @@
 +#Wed Apr 10 15:27:10 PDT 2013
 +distributionBase=GRADLE_USER_HOME
 +distributionPath=wrapper/dists
 +zipStoreBase=GRADLE_USER_HOME
 +zipStorePath=wrapper/dists
 +distributionUrl=https\://services.gradle.org/distributions/gradle-2.2.1-all.zip
View 164  gradlew
@@ -0,0 +1,164 @@
 +#!/usr/bin/env bash
 +
 +
 +# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
 +DEFAULT_JVM_OPTS=""
 +
 +APP_NAME="Gradle"
 +APP_BASE_NAME=`basename "$0"`
 +
 +# Use the maximum available, or set MAX_FD != -1 to use that value.
 +MAX_FD="maximum"
 +
 +warn ( ) {
 +    echo "$*"
 +}
 +
 +die ( ) {
 +    echo
 +    echo "$*"
 +    echo
 +    exit 1
 +}
 +
 +# OS specific support (must be 'true' or 'false').
 +cygwin=false
 +msys=false
 +darwin=false
 +case "`uname`" in
 +  CYGWIN* )
 +    cygwin=true
 +    ;;
 +  Darwin* )
 +    darwin=true
 +    ;;
 +  MINGW* )
 +    msys=true
 +    ;;
 +esac
 +
 +# For Cygwin, ensure paths are in UNIX format before anything is touched.
 +if $cygwin ; then
 +    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
 +fi
 +
 +# Attempt to set APP_HOME
 +# Resolve links: $0 may be a link
 +PRG="$0"
 +# Need this for relative symlinks.
 +while [ -h "$PRG" ] ; do
 +    ls=`ls -ld "$PRG"`
 +    link=`expr "$ls" : '.*-> \(.*\)$'`
 +    if expr "$link" : '/.*' > /dev/null; then
 +        PRG="$link"
 +    else
 +        PRG=`dirname "$PRG"`"/$link"
 +    fi
 +done
 +SAVED="`pwd`"
 +cd "`dirname \"$PRG\"`/" >&-
 +APP_HOME="`pwd -P`"
 +cd "$SAVED" >&-
 +
 +CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 +
 +# Determine the Java command to use to start the JVM.
 +if [ -n "$JAVA_HOME" ] ; then
 +    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
 +        # IBM's JDK on AIX uses strange locations for the executables
 +        JAVACMD="$JAVA_HOME/jre/sh/java"
 +    else
 +        JAVACMD="$JAVA_HOME/bin/java"
 +    fi
 +    if [ ! -x "$JAVACMD" ] ; then
 +        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
 +
 +Please set the JAVA_HOME variable in your environment to match the
 +location of your Java installation."
 +    fi
 +else
 +    JAVACMD="java"
 +    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
 +
 +Please set the JAVA_HOME variable in your environment to match the
 +location of your Java installation."
 +fi
 +
 +# Increase the maximum file descriptors if we can.
 +if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
 +    MAX_FD_LIMIT=`ulimit -H -n`
 +    if [ $? -eq 0 ] ; then
 +        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
 +            MAX_FD="$MAX_FD_LIMIT"
 +        fi
 +        ulimit -n $MAX_FD
 +        if [ $? -ne 0 ] ; then
 +            warn "Could not set maximum file descriptor limit: $MAX_FD"
 +        fi
 +    else
 +        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
 +    fi
 +fi
 +
 +# For Darwin, add options to specify how the application appears in the dock
 +if $darwin; then
 +    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
 +fi
 +
 +# For Cygwin, switch paths to Windows format before running java
 +if $cygwin ; then
 +    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
 +    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
 +
 +    # We build the pattern for arguments to be converted via cygpath
 +    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
 +    SEP=""
 +    for dir in $ROOTDIRSRAW ; do
 +        ROOTDIRS="$ROOTDIRS$SEP$dir"
 +        SEP="|"
 +    done
 +    OURCYGPATTERN="(^($ROOTDIRS))"
 +    # Add a user-defined pattern to the cygpath arguments
 +    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
 +        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
 +    fi
 +    # Now convert the arguments - kludge to limit ourselves to /bin/sh
 +    i=0
 +    for arg in "$@" ; do
 +        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
 +        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
 +
 +        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
 +            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
 +        else
 +            eval `echo args$i`="\"$arg\""
 +        fi
 +        i=$((i+1))
 +    done
 +    case $i in
 +        (0) set -- ;;
 +        (1) set -- "$args0" ;;
 +        (2) set -- "$args0" "$args1" ;;
 +        (3) set -- "$args0" "$args1" "$args2" ;;
 +        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
 +        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
 +        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
 +        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
 +        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
 +        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
 +    esac
 +fi
 +
 +# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
 +function splitJvmOpts() {
 +    JVM_OPTS=("$@")
 +}
 +eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
 +JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
 +
 +exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
View 90  gradlew.bat
@@ -0,0 +1,90 @@
 +@if "%DEBUG%" == "" @echo off
 +
 +@rem Set local scope for the variables with windows NT shell
 +if "%OS%"=="Windows_NT" setlocal
 +
 +@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
 +set DEFAULT_JVM_OPTS=
 +
 +set DIRNAME=%~dp0
 +if "%DIRNAME%" == "" set DIRNAME=.
 +set APP_BASE_NAME=%~n0
 +set APP_HOME=%DIRNAME%
 +
 +@rem Find java.exe
 +if defined JAVA_HOME goto findJavaFromJavaHome
 +
 +set JAVA_EXE=java.exe
 +%JAVA_EXE% -version >NUL 2>&1
 +if "%ERRORLEVEL%" == "0" goto init
 +
 +echo.
 +echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
 +echo.
 +echo Please set the JAVA_HOME variable in your environment to match the
 +echo location of your Java installation.
 +
 +goto fail
 +
 +:findJavaFromJavaHome
 +set JAVA_HOME=%JAVA_HOME:"=%
 +set JAVA_EXE=%JAVA_HOME%/bin/java.exe
 +
 +if exist "%JAVA_EXE%" goto init
 +
 +echo.
 +echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
 +echo.
 +echo Please set the JAVA_HOME variable in your environment to match the
 +echo location of your Java installation.
 +
 +goto fail
 +
 +:init
 +@rem Get command-line arguments, handling Windowz variants
 +
 +if not "%OS%" == "Windows_NT" goto win9xME_args
 +if "%@eval[2+2]" == "4" goto 4NT_args
 +
 +:win9xME_args
 +@rem Slurp the command line arguments.
 +set CMD_LINE_ARGS=
 +set _SKIP=2
 +
 +:win9xME_args_slurp
 +if "x%~1" == "x" goto execute
 +
 +set CMD_LINE_ARGS=%*
 +goto execute
 +
 +:4NT_args
 +@rem Get arguments from the 4NT Shell from JP Software
 +set CMD_LINE_ARGS=%$
 +
 +:execute
 +@rem Setup the command line
 +
 +set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
 +
 +@rem Execute Gradle
 +"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
 +
 +:end
 +@rem End local scope for the variables with windows NT shell
 +if "%ERRORLEVEL%"=="0" goto mainEnd
 +
 +:fail
 +rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
 +rem the _cmd.exe /c_ return code!
 +if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
 +exit /b 1
 +
 +:mainEnd
 +if "%OS%"=="Windows_NT" endlocal
 +
 +:omega
